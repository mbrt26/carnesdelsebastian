version: '3.8'

services:
  # API Gateway
  gateway:
    build:
      context: .
      dockerfile: ./backend/common/gateway/Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - JWT_SECRET=your-secret-key
      - ORDENES_SERVICE_URL=http://ordenes:3001
      - CALIDAD_SERVICE_URL=http://calidad:3002
      - INVENTARIOS_SERVICE_URL=http://inventarios:3003
    depends_on:
      - ordenes
      - calidad
      - inventarios
      - redis
    networks:
      - app-network

  # Microservicio de Ã“rdenes
  ordenes:
    build:
      context: .
      dockerfile: ./backend/ordenes/Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/carnes_ordenes
      - REDIS_URL=redis://redis:6379
      - PUBSUB_TOPIC=ordenes-events
    depends_on:
      - postgres
      - redis
    networks:
      - app-network

  # Microservicio de Calidad
  calidad:
    build:
      context: .
      dockerfile: ./backend/calidad/Dockerfile
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/carnes_calidad
      - REDIS_URL=redis://redis:6379
      - PUBSUB_TOPIC=calidad-events
    depends_on:
      - postgres
      - redis
    networks:
      - app-network

  # Microservicio de Inventarios
  inventarios:
    build:
      context: .
      dockerfile: ./backend/inventarios/Dockerfile
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/carnes_inventarios
      - REDIS_URL=redis://redis:6379
      - PUBSUB_TOPIC=inventarios-events
    depends_on:
      - postgres
      - redis
    networks:
      - app-network

  # Base de datos PostgreSQL
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=carnes_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - app-network

  # Redis para cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network

  # Frontend Web
  frontend-web:
    build:
      context: ./frontend/web
      args:
        - REACT_APP_API_URL=http://localhost:3000
    ports:
      - "3100:3000"
    depends_on:
      - gateway
    networks:
      - app-network

volumes:
  postgres_data:
  redis_data:

networks:
  app-network:
    driver: bridge